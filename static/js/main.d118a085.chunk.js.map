{"version":3,"sources":["components/header.js","components/btn-add-task.js","components/btn-mod-simplified.js","components/btn-view-tasks.js","pages/home-page.js","components/btn-back-init.js","components/no-exist-tasks.js","pages/viewer-tasks-page.js","components/show-modal.js","pages/add-new-task-page.js","pages/simplified-page.js","App.js","reportWebVitals.js","index.js"],"names":["Header","data-testid","className","BtnAddTask","history","useHistory","onClick","push","go","type","BtnModSimplified","BtnViewTasks","HomePage","BtnBackInit","mod","NoExistTasks","ViewerTasksPage","useState","tasks","setTasks","useEffect","fetch","then","response","json","data","catch","e","Error","ShowTasks","tasksFormated","map","task","title","text","id","method","length","ShowModal","feedbackPost","AddNewTaskPage","newTask","setNewTask","setFeedbackPost","showResponseAPI","formSubmit","values","a","headers","body","JSON","stringify","showError","message","sendSchema","Yup","shape","min","max","required","backHome","initialValues","onSubmit","validationSchema","name","placeholder","aria-label","render","as","SimplifiedPage","App","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d118a085.chunk.js","sourcesContent":["const Header = () => (\r\n  <header data-testid='header-tag'>\r\n    <h1 data-testid='header-title' className='title-principal'>\r\n      Gereciador de Notas\r\n    </h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nconst BtnAddTask = () => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push('/add-task');\r\n    history.go(0);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      data-testid='btn-new-task'\r\n      onClick={handleClick}\r\n      className='home__btn'\r\n      type='button'\r\n    >\r\n      nova nota\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BtnAddTask;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nconst BtnModSimplified = () => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push('/simplified');\r\n  };\r\n\r\n  return (\r\n    <button\r\n      data-testid='btn-mod-simplified'\r\n      onClick={handleClick}\r\n      className='home__btn'\r\n      type='button'\r\n    >\r\n      modo simplificado\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BtnModSimplified;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nconst BtnViewTasks = () => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push('/view-tasks');\r\n  };\r\n\r\n  return (\r\n    <button\r\n      data-testid='btn-view-tasks'\r\n      onClick={handleClick}\r\n      className='home__btn'\r\n      type='button'\r\n    >\r\n      ver notas\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BtnViewTasks;\r\n","import BtnAddTask from '../components/btn-add-task';\r\nimport BtnModSimplified from '../components/btn-mod-simplified';\r\nimport BtnViewTasks from '../components/btn-view-tasks';\r\n\r\nconst HomePage = () => (\r\n  <main className='home__content'>\r\n    <BtnAddTask />\r\n    <BtnViewTasks />\r\n    <section className='division-horizontal' />\r\n    <BtnModSimplified />\r\n  </main>\r\n);\r\n\r\nexport default HomePage;\r\n","import { useHistory } from 'react-router-dom';\r\n\r\nconst BtnBackInit = ({ mod }) => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <button\r\n      data-testid='btn-back-init'\r\n      onClick={handleClick}\r\n      className='home__btn'\r\n      type='button'\r\n    >\r\n      {mod === 'simplified' ? 'Voltar para tela inicial' : 'Voltar'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BtnBackInit;\r\n","import BtnAddTask from './btn-add-task';\r\n\r\nconst NoExistTasks = (mod) => (\r\n  <main data-testid='no-exist-tasks-main' className='no-tasks__content'>\r\n    <h3 data-testid='no-exist-tasks-title' className='no-tasks__title'>\r\n      NÃ£o existem notas adicionadas\r\n    </h3>\r\n    {mod === 'simplified' ? null : <BtnAddTask />}\r\n  </main>\r\n);\r\n\r\nexport default NoExistTasks;\r\n","import { useEffect, useState } from 'react';\r\nimport BtnAddTask from '../components/btn-add-task';\r\nimport BtnBackInit from '../components/btn-back-init';\r\nimport NoExistTasks from '../components/no-exist-tasks';\r\n\r\nconst ViewerTasksPage = ({ mod }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/tasks')\r\n      .then((response) => response.json())\r\n      .then((data) => setTasks(data))\r\n      .catch((e) => {\r\n        throw new Error(e);\r\n      });\r\n  }, []);\r\n\r\n  const ShowTasks = () => {\r\n    const deleteTask = (id) => {\r\n      fetch(`http://localhost:5000/removetask/${id}`, {\r\n        method: 'DELETE'\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => setTasks(data))\r\n        .catch((e) => {\r\n          throw new Error(e);\r\n        });\r\n    };\r\n\r\n    const tasksFormated = tasks.map((task) => (\r\n      <article className='task__content' key={task.id}>\r\n        <header className='task__header'>\r\n          <h3>{task.title}</h3>\r\n        </header>\r\n        <p className='task__text'>{task.text}</p>\r\n        <footer className='task__footer'>\r\n          <button\r\n            onClick={() => deleteTask(task.id)}\r\n            className='task__btn-delete'\r\n            type='button'\r\n          >\r\n            <i className='fas fa-times' />\r\n          </button>\r\n        </footer>\r\n      </article>\r\n    ));\r\n\r\n    return (\r\n      <main className='show-tasks__content'>\r\n        <h2 className='show-tasks__h2'>Suas notas</h2>\r\n\r\n        <section className='show-tasks__tasks'>{tasksFormated}</section>\r\n\r\n        {mod === 'simplified' ? null : (\r\n          <>\r\n            <BtnAddTask />\r\n            <BtnBackInit />\r\n          </>\r\n        )}\r\n      </main>\r\n    );\r\n  };\r\n\r\n  const isExistTasks = () => {\r\n    if (tasks.length === 0) {\r\n      return NoExistTasks(mod);\r\n    }\r\n\r\n    return ShowTasks(tasks);\r\n  };\r\n\r\n  return isExistTasks();\r\n};\r\n\r\nexport default ViewerTasksPage;\r\n","import BtnAddNotas from './btn-add-task';\r\nimport BtnViewTasks from './btn-view-tasks';\r\n\r\nconst ShowModal = ({ feedbackPost }) => {\r\n  if (feedbackPost === '')\r\n    return <aside data-testid='show-modal-aside-empty' />;\r\n\r\n  return (\r\n    <aside data-testid='show-modal-aside' className='show-modal__content'>\r\n      <section data-testid='show-modal-section' className='show-modal__base'>\r\n        <h3 data-testid='show-modal-title' className='show-modal__title'>\r\n          {feedbackPost}\r\n        </h3>\r\n        <BtnViewTasks />\r\n        <BtnAddNotas />\r\n      </section>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default ShowModal;\r\n","/* eslint-disable react/prop-types */\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport ShowModal from '../components/show-modal';\r\n\r\nconst AddNewTaskPage = ({ mod }) => {\r\n  const [newTask, setNewTask] = useState({});\r\n  const [feedbackPost, setFeedbackPost] = useState('');\r\n  const history = useHistory();\r\n\r\n  const showResponseAPI = (response) => {\r\n    if (response === 'error')\r\n      return setFeedbackPost('Nota nÃ£o criada, sem conexÃ£o com o servido');\r\n\r\n    if (response.title !== newTask.title && response.text !== newTask.text) {\r\n      return setFeedbackPost('Nota nÃ£o criada, tente novamente mais tarde');\r\n    }\r\n\r\n    return setFeedbackPost('Nota criada com sucesso!');\r\n  };\r\n\r\n  const formSubmit = async (values) => {\r\n    setNewTask(values);\r\n\r\n    await fetch('http://localhost:5000/addtask', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(values)\r\n    })\r\n      .then((response) => showResponseAPI(response))\r\n      .catch(showResponseAPI('error'));\r\n\r\n    if (mod === 'simplified') {\r\n      history.push('/simplified');\r\n      history.go(0);\r\n    }\r\n  };\r\n\r\n  const showError = (message) => (\r\n    <p className='add-new-task__error'>{message}</p>\r\n  );\r\n\r\n  const sendSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(3, 'Precisa ter no mÃ­nino 3 letras!')\r\n      .max(50, 'No mÃ¡ximo 50 caracteres!')\r\n      .required('Precisa ter uma assunto!'),\r\n    text: Yup.string()\r\n      .min(10, 'Precisa ter no mÃ­nino 10 letras!')\r\n      .max(150, 'No mÃ¡ximo 150 caracteres!')\r\n      .required('Precisa ter um texto!')\r\n  });\r\n\r\n  const backHome = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main className='add-new-task__content'>\r\n        <h2 className='add-new-task__h2'>Bloco de notas</h2>\r\n        <Formik\r\n          initialValues={{\r\n            title: '',\r\n            text: ''\r\n          }}\r\n          onSubmit={formSubmit}\r\n          validationSchema={sendSchema}\r\n        >\r\n          {() => (\r\n            <Form\r\n              data-testid='add-new-task-page-form'\r\n              className='add-new-task__form'\r\n            >\r\n              <Field\r\n                data-testid='add-new-task-page-input-text'\r\n                className='add-new-task__title'\r\n                name='title'\r\n                type='text'\r\n                placeholder='Assunto.'\r\n                aria-label='Assunto'\r\n              />\r\n              <ErrorMessage name='title' render={showError} />\r\n              <Field\r\n                data-testid='add-new-task-page-textarea'\r\n                className='add-new-task__text'\r\n                name='text'\r\n                as='textarea'\r\n                placeholder='Texto.'\r\n                aria-label='Corpo do texto'\r\n              />\r\n              <ErrorMessage name='text' render={showError} />\r\n              <button\r\n                data-testid='add-new-task-page-new-task'\r\n                className='add-new-task__btn'\r\n                type='submit'\r\n              >\r\n                criar nota\r\n              </button>\r\n\r\n              {mod === 'simplified' ? null : (\r\n                <button\r\n                  data-testid='add-new-task-page-voltar'\r\n                  onClick={backHome}\r\n                  className='add-new-task__btn'\r\n                  type='button'\r\n                >\r\n                  voltar\r\n                </button>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </main>\r\n      {mod === 'simplified' ? null : <ShowModal feedbackPost={feedbackPost} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewTaskPage;\r\n","import BtnBackInit from '../components/btn-back-init';\r\nimport AddNewTaskPage from './add-new-task-page';\r\nimport ViewerTasksPage from './viewer-tasks-page';\r\n\r\nconst SimplifiedPage = () => (\r\n  <>\r\n    <section className='simplified-page'>\r\n      <AddNewTaskPage mod='simplified' />\r\n      <ViewerTasksPage mod='simplified' />\r\n    </section>\r\n    <footer className='simplified-page__footer'>\r\n      <BtnBackInit mod='simplified' />\r\n    </footer>\r\n  </>\r\n);\r\n\r\nexport default SimplifiedPage;\r\n","import './App.scss';\r\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Header from './components/header';\r\nimport HomePage from './pages/home-page';\r\nimport ViewerTasksPage from './pages/viewer-tasks-page';\r\nimport AddNewTaskPage from './pages/add-new-task-page';\r\nimport SimplifiedPage from './pages/simplified-page';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <HomePage />\r\n          </Route>\r\n          <Route exact path='/view-tasks'>\r\n            <ViewerTasksPage />\r\n          </Route>\r\n\r\n          <Route exact path='/add-task'>\r\n            <AddNewTaskPage />\r\n          </Route>\r\n\r\n          <Route exact path='/simplified'>\r\n            <SimplifiedPage />\r\n          </Route>\r\n\r\n          <Route exact path='*'>\r\n            <Redirect to='/' />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}